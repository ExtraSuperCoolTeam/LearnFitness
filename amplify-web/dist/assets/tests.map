{"version":3,"sources":["amplify-web/tests/app.jshint.js","amplify-web/tests/components/week-content.jshint.js","amplify-web/tests/controllers/create-app.jshint.js","amplify-web/tests/controllers/manage-app.jshint.js","amplify-web/tests/helpers/destroy-app.js","amplify-web/tests/helpers/destroy-app.jshint.js","amplify-web/tests/helpers/module-for-acceptance.js","amplify-web/tests/helpers/module-for-acceptance.jshint.js","amplify-web/tests/helpers/register-select-helper.js","amplify-web/tests/helpers/resolver.js","amplify-web/tests/helpers/resolver.jshint.js","amplify-web/tests/helpers/start-app.js","amplify-web/tests/helpers/start-app.jshint.js","amplify-web/tests/integration/components/week-content-test.js","amplify-web/tests/integration/components/week-content-test.jshint.js","amplify-web/tests/router.jshint.js","amplify-web/tests/test-helper.js","amplify-web/tests/test-helper.jshint.js","amplify-web/tests/unit/controllers/create-app-test.js","amplify-web/tests/unit/controllers/create-app-test.jshint.js","amplify-web/tests/utils/week-content.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('amplify-web/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('amplify-web/tests/components/week-content.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/week-content.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/week-content.js should pass jshint.');\n  });\n});","define('amplify-web/tests/controllers/create-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/create-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/create-app.js should pass jshint.');\n  });\n});","define('amplify-web/tests/controllers/manage-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/manage-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/manage-app.js should pass jshint.\\ncontrollers/manage-app.js: line 94, col 9, Forgotten \\'debugger\\' statement?\\ncontrollers/manage-app.js: line 93, col 28, \\'result\\' is defined but never used.\\ncontrollers/manage-app.js: line 96, col 9, Forgotten \\'debugger\\' statement?\\ncontrollers/manage-app.js: line 95, col 10, \\'err\\' is defined but never used.\\ncontrollers/manage-app.js: line 59, col 11, \\'result\\' is defined but never used.\\ncontrollers/manage-app.js: line 24, col 5, \\'$\\' is not defined.\\ncontrollers/manage-app.js: line 93, col 7, \\'$\\' is not defined.\\n\\n7 errors');\n  });\n});","define('amplify-web/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('amplify-web/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('amplify-web/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'amplify-web/tests/helpers/start-app', 'amplify-web/tests/helpers/destroy-app'], function (exports, _qunit, _amplifyWebTestsHelpersStartApp, _amplifyWebTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _amplifyWebTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _amplifyWebTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('amplify-web/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('amplify-web/tests/helpers/register-select-helper', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = function () {\n    _ember['default'].Test.registerAsyncHelper('select', function (app, selector) {\n      for (var _len = arguments.length, texts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        texts[_key - 2] = arguments[_key];\n      }\n\n      var $options = app.testHelpers.findWithAssert(selector + ' option');\n\n      $options.each(function () {\n        var _this = this;\n\n        var $option = _ember['default'].$(this);\n\n        _ember['default'].run(function () {\n          _this.selected = texts.some(function (text) {\n            return $option.is(':contains(\\'' + text + '\\')');\n          });\n          $option.trigger('change');\n        });\n      });\n\n      return app.testHelpers.wait();\n    });\n  };\n});","define('amplify-web/tests/helpers/resolver', ['exports', 'ember/resolver', 'amplify-web/config/environment'], function (exports, _emberResolver, _amplifyWebConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _amplifyWebConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _amplifyWebConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('amplify-web/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('amplify-web/tests/helpers/start-app', ['exports', 'ember', 'amplify-web/app', 'amplify-web/config/environment'], function (exports, _ember, _amplifyWebApp, _amplifyWebConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _amplifyWebConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _amplifyWebApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('amplify-web/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('amplify-web/tests/integration/components/week-content-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('week-content', 'Integration | Component | week content', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'topLevel': null,\n          'revision': 'Ember@2.1.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'week-content', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'topLevel': null,\n            'revision': 'Ember@2.1.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'topLevel': null,\n          'revision': 'Ember@2.1.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'week-content', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('amplify-web/tests/integration/components/week-content-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/week-content-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/week-content-test.js should pass jshint.');\n  });\n});","define('amplify-web/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('amplify-web/tests/test-helper', ['exports', 'amplify-web/tests/helpers/resolver', 'amplify-web/tests/helpers/register-select-helper', 'ember-qunit'], function (exports, _amplifyWebTestsHelpersResolver, _amplifyWebTestsHelpersRegisterSelectHelper, _emberQunit) {\n  (0, _amplifyWebTestsHelpersRegisterSelectHelper['default'])();\n\n  (0, _emberQunit.setResolver)(_amplifyWebTestsHelpersResolver['default']);\n});","define('amplify-web/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('amplify-web/tests/unit/controllers/create-app-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:create-app', 'Unit | Controller | create app', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('amplify-web/tests/unit/controllers/create-app-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/create-app-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/create-app-test.js should pass jshint.');\n  });\n});","define('amplify-web/tests/utils/week-content.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - utils/week-content.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/week-content.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('amplify-web/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}